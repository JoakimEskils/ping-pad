version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=pingpad
      - POSTGRES_USER=pingpad
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pingpad-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pingpad -d pingpad"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=pingpad
      - DB_USER=pingpad
      - DB_PASSWORD=password
      - API_TESTING_ENGINE_URL=http://api-testing-engine:8081
      - GITHUB_CLIENT_ID=Ov23livg36sQxvuFHa9Q
      - GITHUB_CLIENT_SECRET=4a76dbaefbf27731db4d212b30278f415a2dff01
    depends_on:
      postgres:
        condition: service_healthy
      api-testing-engine:
        condition: service_started
    networks:
      - pingpad-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-testing-engine:
    build: ./api-testing-engine
    ports:
      - "8081:8081"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8081
      - TESTING_MAX_CONCURRENCY=100
      - TESTING_RATE_LIMIT=100
      - TESTING_DEFAULT_TIMEOUT=30s
      - TESTING_MAX_RETRIES=3
    networks:
      - pingpad-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - pingpad-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
      - api-testing-engine
    networks:
      - pingpad-network

volumes:
  postgres_data:

networks:
  pingpad-network:
    driver: bridge
